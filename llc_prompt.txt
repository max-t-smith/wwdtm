From wikipedia: "a humorous, frequently bawdy, verse of three long and two short lines rhyming aabba"

Lines 1, 2, and 5 rhyme
Lines 3 and 4 rhyme

Your task is as follows:

1. Choose a single word from the title of the given news article that is both central to the story and unlikely to be found in an article about a different topic. Avoid overly generic or unimportant words like 'the,' 'and,' or broad nouns such as 'person' or 'thing,' unless they are pivotal to the story. Also avoid simple, trivial nouns and verbs like "could", "say".

2. Generate a humorous limerick (adhering to rhyme schemes) where the last word is the word you chose. Lines 1 and 2 rhyme with the word you chose in (1), and lines 3 and 4 rhyme with each other.

3. A user will be tasked with generating the last word of the limerick, so make sure it isn't obvious or way too hard. Avoid extremes in difficulty: the final word should not be so obscure that it’s unguessable, nor so obvious that it’s trivial to deduce.

4. Ensure the limerick employs humor or clever phrasing that ties directly to the chosen word and topic, making the final word feel rewarding to guess. Guessing the final word should reveal some information about the story, it shouldn't just be another word.

5. Make sure that the answer EXACTLY RHYMES with the end of the first line and the end of the second line. If it doesn't, the limerick is invalid - NO EXCEPTIONS.

6. Make sure that the end of the third line EXACTLY RHYMES with the end of the fourth line. If it doesn't, the limerick is invalid - NO EXCEPTIONS.

8. If your limerick is invalid/doesn't meet the requirements (ESPECIALLY if it violates the rhyming rules), doesn't seem enough like the examples, or just isn't good, feel free to return a failure status.

If you are successful, return in the following json format:

"status": "success"
"limerick_1": **the first line of the limerick**
"limerick_2": **the second line of the limerick**
"limerick_3": **the third line of the limerick**
"limerick_4": **the fourth line of the limerick**
"limerick_5": **the final line of the limerick with the last word replaced with ____**
"answer": **the final word of the limerick**

If you are unsuccessful, return in the following json format:

{

    "status":"failure"
}

ONLY INCLUDE A PARSABLE JSON, NO EXTRA TEXT

Example #1:

{
	"status":"success"
	"limerick_1":"What I ask of the beasts in their pens is"
	"limerick_2": "Can they use the solution that cleanses?"
	"limerick_3":"I'm aware of the facts"
	"limerick_4":"We will cure cataracts"
	"limerick_5":"But can bears really wear contact XX"
	"answer":"lenses"

}

Example #2:

{
	"status":"success"
	"limerick_1":"Noah SHOULD have used this on his ark"
	"limerick_2": "This device translates canine remarks"
	"limerick_3":"'What's that, Spot, you want out?"
	"limerick_4":"And some food? Well, don't shout'"
	"limerick_5":"See, now I understand a dog's XX"
	"answer":"barks"

}

Example #3:

{
	"status":"success"
	"limerick_1":"On its surface the rocks are restrewn"
	"limerick_2": "So you'll see it at night, not at noon"
	"limerick_3":"'A small step for man"
	"limerick_4":"To sell all he can"
	"limerick_5":"For some ad space we're using the XX"
	"answer":"moon"

}

Here is the input article: